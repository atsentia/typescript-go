--- old.jsFileFunctionOverloads.errors.txt
+++ new.jsFileFunctionOverloads.errors.txt
@@= skipped -0, +0 lines =@@
-<no content>
+jsFileFunctionOverloads.js(29,17): error TS8004: Type parameter declarations can only be used in TypeScript files.
+
+
+==== jsFileFunctionOverloads.js (1 errors) ====
+    /**
+     * @overload
+     * @param {number} x
+     * @returns {'number'}
+     */
+    /**
+     * @overload
+     * @param {string} x
+     * @returns {'string'}
+     */
+    /**
+     * @overload
+     * @param {boolean} x
+     * @returns {'boolean'}
+     */
+    /**
+     * @param {unknown} x
+     * @returns {string}
+     */
+     function getTypeName(x) {
+      return typeof x;
+    }
+    
+    /**
+     * @template T
+     * @param {T} x 
+     * @returns {T}
+     */
+    const identity = x => x;
+                    ~~~~~~~
+!!! error TS8004: Type parameter declarations can only be used in TypeScript files.
+    
+    /**
+     * @template T
+     * @template U
+     * @overload
+     * @param {T[]} array 
+     * @param {(x: T) => U[]} iterable 
+     * @returns {U[]}
+     */
+    /**
+     * @template T
+     * @overload
+     * @param {T[][]} array
+     * @returns {T[]}
+     */
+    /**
+     * @param {unknown[]} array 
+     * @param {(x: unknown) => unknown} iterable 
+     * @returns {unknown[]}
+     */
+    function flatMap(array, iterable = identity) {
+      /** @type {unknown[]} */
+      const result = [];
+      for (let i = 0; i < array.length; i += 1) {
+        result.push(.../** @type {unknown[]} */(iterable(array[i])));
+      }
+      return result;
+    }
+    