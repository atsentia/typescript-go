--- old.jsDeclarationsGetterSetter.errors.txt
+++ new.jsDeclarationsGetterSetter.errors.txt
@@= skipped -0, +0 lines =@@
-<no content>
+index.js(9,16): error TS8010: Type annotations can only be used in TypeScript files.
+index.js(33,16): error TS8010: Type annotations can only be used in TypeScript files.
+index.js(44,16): error TS8010: Type annotations can only be used in TypeScript files.
+index.js(52,16): error TS8010: Type annotations can only be used in TypeScript files.
+index.js(66,16): error TS8010: Type annotations can only be used in TypeScript files.
+index.js(72,12): error TS8010: Type annotations can only be used in TypeScript files.
+index.js(81,12): error TS8010: Type annotations can only be used in TypeScript files.
+index.js(85,12): error TS8010: Type annotations can only be used in TypeScript files.
+index.js(94,12): error TS8010: Type annotations can only be used in TypeScript files.
+index.js(98,12): error TS8010: Type annotations can only be used in TypeScript files.
+index.js(107,12): error TS8010: Type annotations can only be used in TypeScript files.
+index.js(111,12): error TS8010: Type annotations can only be used in TypeScript files.
+
+
+==== index.js (12 errors) ====
+    export class A {
+        get x() {
+            return 12;
+        }
+    }
+    
+    export class B {
+        /**
+         * @param {number} _arg
+                   ~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+         */
+        set x(_arg) {
+        }
+    }
+    
+    export class C {
+        get x() {
+            return 12;
+        }
+        set x(_arg) {
+        }
+    }
+    
+    export class D {}
+    Object.defineProperty(D.prototype, "x", {
+        get() {
+            return 12;
+        }
+    });
+    
+    export class E {}
+    Object.defineProperty(E.prototype, "x", {
+        /**
+         * @param {number} _arg
+                   ~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+         */
+        set(_arg) {}
+    });
+    
+    export class F {}
+    Object.defineProperty(F.prototype, "x", {
+        get() {
+            return 12;
+        },
+        /**
+         * @param {number} _arg
+                   ~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+         */
+        set(_arg) {}
+    });
+    
+    export class G {}
+    Object.defineProperty(G.prototype, "x", {
+        /**
+         * @param {number[]} args
+                   ~~~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+         */
+        set(...args) {}
+    });
+    
+    export class H {}
+    Object.defineProperty(H.prototype, "x", {
+        set() {}
+    });
+    
+    
+    export class I {}
+    Object.defineProperty(I.prototype, "x", {
+        /**
+         * @param {number} v
+                   ~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+         */
+        set: (v) => {}
+    });
+    
+    /**
+     * @param {number} v
+               ~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+     */
+    const jSetter = (v) => {}
+    export class J {}
+    Object.defineProperty(J.prototype, "x", {
+        set: jSetter
+    });
+    
+    /**
+     * @param {number} v
+               ~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+     */
+    const kSetter1 = (v) => {}
+    /**
+     * @param {number} v
+               ~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+     */
+    const kSetter2 = (v) => {}
+    export class K {}
+    Object.defineProperty(K.prototype, "x", {
+        set: Math.random() ? kSetter1 : kSetter2
+    });
+    
+    /**
+     * @param {number} v
+               ~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+     */
+    const lSetter1 = (v) => {}
+    /**
+     * @param {string} v
+               ~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+     */
+    const lSetter2 = (v) => {}
+    export class L {}
+    Object.defineProperty(L.prototype, "x", {
+        set: Math.random() ? lSetter1 : lSetter2
+    });
+    
+    /**
+     * @param {number | boolean} v
+               ~~~~~~~~~~~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+     */
+    const mSetter1 = (v) => {}
+    /**
+     * @param {string | boolean} v
+               ~~~~~~~~~~~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+     */
+    const mSetter2 = (v) => {}
+    export class M {}
+    Object.defineProperty(M.prototype, "x", {
+        set: Math.random() ? mSetter1 : mSetter2
+    });
+    