--- old.typedefTagWrapping.errors.txt
+++ new.typedefTagWrapping.errors.txt
@@= skipped -0, +0 lines =@@
-mod7.js(5,7): error TS1110: Type expected.
-mod7.js(8,4): error TS1110: Type expected.
-
-
-==== mod1.js (0 errors) ====
+mod1.js(2,14): error TS2552: Cannot find name 'function'. Did you mean 'Function'?
+mod1.js(9,12): error TS2304: Cannot find name 'Type1'.
+mod2.js(15,18): error TS8009: The '?' modifier can only be used in TypeScript files.
+mod3.js(4,14): error TS2552: Cannot find name 'function'. Did you mean 'Function'?
+mod3.js(10,12): error TS2304: Cannot find name 'StringOrNumber1'.
+mod4.js(4,14): error TS2552: Cannot find name 'function'. Did you mean 'Function'?
+mod4.js(11,12): error TS2304: Cannot find name 'StringOrNumber2'.
+mod5.js(18,18): error TS8009: The '?' modifier can only be used in TypeScript files.
+
+
+==== mod1.js (2 errors) ====
     /** 
      * @typedef {function(string): boolean}
+                 ~~~~~~~~
+!!! error TS2552: Cannot find name 'function'. Did you mean 'Function'?
+!!! related TS2728 lib.es5.d.ts:--:--: 'Function' is declared here.
      * Type1
      */
     
@@= skipped -11, +20 lines =@@
      * Tries to use a type whose name is on a different
      * line than the typedef tag.
      * @param {Type1} func The function to call.
+               ~~~~~
+!!! error TS2304: Cannot find name 'Type1'.
      * @param {string} arg The argument to call it with.
      * @returns {boolean} The return.
      */
@@= skipped -7, +9 lines =@@
       return func(arg);
     }
     
-==== mod2.js (0 errors) ====
+==== mod2.js (1 errors) ====
     /** 
      * @typedef {{
      *   num: number,
@@= skipped -16, +16 lines =@@
      */
     function check(obj) {
       return obj.boo ? obj.num : obj.str;
+                     ~
+!!! error TS8009: The '?' modifier can only be used in TypeScript files.
     }
     
-==== mod3.js (0 errors) ====
+==== mod3.js (2 errors) ====
     /**
      * A function whose signature is very long.
      *
      * @typedef {function(boolean, string, number):
+                 ~~~~~~~~
+!!! error TS2552: Cannot find name 'function'. Did you mean 'Function'?
+!!! related TS2728 lib.es5.d.ts:--:--: 'Function' is declared here.
      *     (string|number)} StringOrNumber1
      */
     
     /**
      * Makes use of a function type with a long signature.
      * @param {StringOrNumber1} func The function.
+               ~~~~~~~~~~~~~~~
+!!! error TS2304: Cannot find name 'StringOrNumber1'.
      * @param {boolean} bool The condition.
      * @param {string} str The string.
      * @param {number} num The number.
@@= skipped -22, +29 lines =@@
       return func(bool, str, num)
     }
     
-==== mod4.js (0 errors) ====
+==== mod4.js (2 errors) ====
     /**
      * A function whose signature is very long.
      *
      * @typedef {function(boolean, string,
+                 ~~~~~~~~
+!!! error TS2552: Cannot find name 'function'. Did you mean 'Function'?
+!!! related TS2728 lib.es5.d.ts:--:--: 'Function' is declared here.
      *    number):
      *    (string|number)} StringOrNumber2
      */
@@= skipped -12, +15 lines =@@
     /**
      * Makes use of a function type with a long signature.
      * @param {StringOrNumber2} func The function.
+               ~~~~~~~~~~~~~~~
+!!! error TS2304: Cannot find name 'StringOrNumber2'.
      * @param {boolean} bool The condition.
      * @param {string} str The string.
      * @param {number} num The number.
@@= skipped -9, +11 lines =@@
       return func(bool, str, num)
     }
     
-==== mod5.js (0 errors) ====
+==== mod5.js (1 errors) ====
     /** 
      * @typedef {{
      *   num:
@@= skipped -19, +19 lines =@@
      */
     function check5(obj) {
       return obj.boo ? obj.num : obj.str;
+                     ~
+!!! error TS8009: The '?' modifier can only be used in TypeScript files.
     }
     
 ==== mod6.js (0 errors) ====
@@= skipped -22, +24 lines =@@
     }
     
     
-==== mod7.js (2 errors) ====
+==== mod7.js (0 errors) ====
     /** 
        Multiline type expressions in comments without leading * are not supported.
        @typedef {{
          foo:
          *,
-          ~
-!!! error TS1110: Type expected.
          bar:
          *
        }} Type7
-       ~
-!!! error TS1110: Type expected.
      */
     