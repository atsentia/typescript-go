--- old.jsdocTemplateTagDefault.errors.txt
+++ new.jsdocTemplateTagDefault.errors.txt
@@= skipped -0, +0 lines =@@
 file.js(9,20): error TS2322: Type 'number' is not assignable to type 'string'.
-file.js(22,34): error TS1005: '=' expected.
-file.js(27,35): error TS1110: Type expected.
+file.js(13,21): error TS8004: Type parameter declarations can only be used in TypeScript files.
 file.js(33,14): error TS2706: Required type parameters may not follow optional type parameters.
 file.js(38,17): error TS2744: Type parameter defaults can only reference previously declared type parameters.
+file.js(49,21): error TS8004: Type parameter declarations can only be used in TypeScript files.
 file.js(53,14): error TS2706: Required type parameters may not follow optional type parameters.
+file.js(57,21): error TS8004: Type parameter declarations can only be used in TypeScript files.
 file.js(60,17): error TS2744: Type parameter defaults can only reference previously declared type parameters.


-==== file.js (7 errors) ====
+==== file.js (8 errors) ====
     /**
      * @template {string | number} [T=string] - ok: defaults are permitted
      * @typedef {[T]} A
@@= skipped -22, +23 lines =@@
     const aString = [""];
     /** @type {A<number>} */ // ok, `T` is provided for `A`
     const aNumber = [0];
+                        
+    
     
     /**
+    ~~~
      * @template T
+    ~~~~~~~~~~~~~~
      * @template [U=T] - ok: default can reference earlier type parameter
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      * @typedef {[T, U]} B
+    ~~~~~~~~~~~~~~~~~~~~~~
      */
+    ~~~
+    
     
     /**
+    ~~~
      * @template {string | number} [T] - error: default requires an `=type`
-                                     ~
-!!! error TS1005: '=' expected.
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      * @typedef {[T]} C
+    ~~~~~~~~~~~~~~~~~~~
      */
+    ~~~
+    
     
     /**
+    ~~~
      * @template {string | number} [T=] - error: default requires a `type`
-                                      ~
-!!! error TS1110: Type expected.
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      * @typedef {[T]} D
+    ~~~~~~~~~~~~~~~~~~~
      */
+    ~~~
+    
     
     /**
+    ~~~
      * @template {string | number} [T=string]
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      * @template U - error: Required type parameters cannot follow optional type parameters
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                  ~
 !!! error TS2706: Required type parameters may not follow optional type parameters.
      * @typedef {[T, U]} E
+    ~~~~~~~~~~~~~~~~~~~~~~
      */
+    ~~~
+    
     
     /**
+    ~~~
      * @template [T=U] - error: Type parameter defaults can only reference previously declared type parameters.
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                     ~
 !!! error TS2744: Type parameter defaults can only reference previously declared type parameters.
      * @template [U=T]
+    ~~~~~~~~~~~~~~~~~~
      * @typedef {[T, U]} G
+    ~~~~~~~~~~~~~~~~~~~~~~
      */
+    ~~~
+    
     
     /**
+    ~~~
      * @template T
+    ~~~~~~~~~~~~~~
      * @template [U=T] - ok: default can reference earlier type parameter
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      * @param {T} a
+    ~~~~~~~~~~~~~~~
      * @param {U} b
+    ~~~~~~~~~~~~~~~
      */
+    ~~~
     function f1(a, b) {}
+    ~~~~~~~~~~~~~~~~~~~~
+!!! error TS8004: Type parameter declarations can only be used in TypeScript files.
+                        
+    
     
      /**
+    ~~~~
      * @template {string | number} [T=string]
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      * @template U - error: Required type parameters cannot follow optional type parameters
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                  ~
 !!! error TS2706: Required type parameters may not follow optional type parameters.
      * @param {T} a
+    ~~~~~~~~~~~~~~~
      * @param {U} b
+    ~~~~~~~~~~~~~~~
      */
+    ~~~
     function f2(a, b) {}
+    ~~~~~~~~~~~~~~~~~~~~
+!!! error TS8004: Type parameter declarations can only be used in TypeScript files.
+                        
+    
     
     /**
+    ~~~
      * @template [T=U] - error: Type parameter defaults can only reference previously declared type parameters.
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                     ~
 !!! error TS2744: Type parameter defaults can only reference previously declared type parameters.
      * @template [U=T]
+    ~~~~~~~~~~~~~~~~~~
      * @param {T} a
+    ~~~~~~~~~~~~~~~
      * @param {U} b
+    ~~~~~~~~~~~~~~~
      */
+    ~~~
     function f3(a, b) {}
+    ~~~~~~~~~~~~~~~~~~~~
+!!! error TS8004: Type parameter declarations can only be used in TypeScript files.
     