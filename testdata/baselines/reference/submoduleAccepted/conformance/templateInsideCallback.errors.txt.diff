--- old.templateInsideCallback.errors.txt
+++ new.templateInsideCallback.errors.txt
@@= skipped -0, +0 lines =@@
-error TS-1: Pre-emit (11) and post-emit (13) diagnostic counts do not match! This can indicate that a semantic _error_ was added by the emit resolver - such an error may not be reflected on the command line or in the editor, but may be captured in a baseline here!
-templateInsideCallback.js(2,13): error TS8021: JSDoc '@typedef' tag should either have a type annotation or be followed by '@property' or '@member' tags.
-templateInsideCallback.js(9,5): error TS8039: A JSDoc '@template' tag may not follow a '@typedef', '@callback', or '@overload' tag
-templateInsideCallback.js(10,12): error TS2304: Cannot find name 'T'.
 templateInsideCallback.js(15,11): error TS2315: Type 'Call' is not generic.
+templateInsideCallback.js(15,11): error TS8010: Type annotations can only be used in TypeScript files.
+templateInsideCallback.js(15,16): error TS2304: Cannot find name 'T'.
+templateInsideCallback.js(17,17): error TS8004: Type parameter declarations can only be used in TypeScript files.
 templateInsideCallback.js(17,18): error TS7006: Parameter 'x' implicitly has an 'any' type.
-templateInsideCallback.js(23,5): error TS8039: A JSDoc '@template' tag may not follow a '@typedef', '@callback', or '@overload' tag
-templateInsideCallback.js(30,5): error TS8039: A JSDoc '@template' tag may not follow a '@typedef', '@callback', or '@overload' tag
-templateInsideCallback.js(32,12): error TS2304: Cannot find name 'T'.
-templateInsideCallback.js(33,16): error TS2304: Cannot find name 'T'.
-templateInsideCallback.js(38,5): error TS8039: A JSDoc '@template' tag may not follow a '@typedef', '@callback', or '@overload' tag
-templateInsideCallback.js(39,12): error TS2304: Cannot find name 'T'.
-
-
-!!! error TS-1: Pre-emit (11) and post-emit (13) diagnostic counts do not match! This can indicate that a semantic _error_ was added by the emit resolver - such an error may not be reflected on the command line or in the editor, but may be captured in a baseline here!
-!!! related TS-1: The excess diagnostics are:
-!!! related TS7012 templateInsideCallback.js:29:5: This overload implicitly returns the type 'any' because it lacks a return type annotation.
-!!! related TS7012 templateInsideCallback.js:37:5: This overload implicitly returns the type 'any' because it lacks a return type annotation.
-==== templateInsideCallback.js (11 errors) ====
+templateInsideCallback.js(29,5): error TS7012: This overload implicitly returns the type 'any' because it lacks a return type annotation.
+templateInsideCallback.js(29,5): error TS8017: Signature declarations can only be used in TypeScript files.
+templateInsideCallback.js(37,5): error TS7012: This overload implicitly returns the type 'any' because it lacks a return type annotation.
+templateInsideCallback.js(37,5): error TS8017: Signature declarations can only be used in TypeScript files.
+templateInsideCallback.js(43,12): error TS8010: Type annotations can only be used in TypeScript files.
+templateInsideCallback.js(44,12): error TS8010: Type annotations can only be used in TypeScript files.
+templateInsideCallback.js(45,14): error TS8010: Type annotations can only be used in TypeScript files.
+templateInsideCallback.js(48,14): error TS8010: Type annotations can only be used in TypeScript files.
+templateInsideCallback.js(51,31): error TS8016: Type assertion expressions can only be used in TypeScript files.
+
+
+==== templateInsideCallback.js (14 errors) ====
     /**
      * @typedef Oops
-                ~~~~
-!!! error TS8021: JSDoc '@typedef' tag should either have a type annotation or be followed by '@property' or '@member' tags.
      * @template T
      * @property {T} a
      * @property {T} b
@@= skipped -27, +23 lines =@@
     /**
      * @callback Call
      * @template T
-        ~~~~~~~~
-!!! error TS8039: A JSDoc '@template' tag may not follow a '@typedef', '@callback', or '@overload' tag
      * @param {T} x
-               ~
-!!! error TS2304: Cannot find name 'T'.
      * @returns {T}
      */
     /**
@@= skipped -12, +8 lines =@@
      * @type {Call<T>}
               ~~~~~~~
 !!! error TS2315: Type 'Call' is not generic.
+              ~~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
+                   ~
+!!! error TS2304: Cannot find name 'T'.
      */
     const identity = x => x;
+                    ~~~~~~~
+!!! error TS8004: Type parameter declarations can only be used in TypeScript files.
                      ~
 !!! error TS7006: Parameter 'x' implicitly has an 'any' type.
     
@@= skipped -10, +16 lines =@@
      * @property {Object} oh
      * @property {number} oh.no
      * @template T
-        ~~~~~~~~
-!!! error TS8039: A JSDoc '@template' tag may not follow a '@typedef', '@callback', or '@overload' tag
      * @property {string} oh.noooooo
      */
     
     
     /**
      * @overload
+        ~~~~~~~~
+!!! error TS7012: This overload implicitly returns the type 'any' because it lacks a return type annotation.
+        ~~~~~~~~
+!!! error TS8017: Signature declarations can only be used in TypeScript files.
      * @template T
-        ~~~~~~~~
-!!! error TS8039: A JSDoc '@template' tag may not follow a '@typedef', '@callback', or '@overload' tag
      * @template U
      * @param {T[]} array
-               ~
-!!! error TS2304: Cannot find name 'T'.
      * @param {(x: T) => U[]} iterable
-                   ~
-!!! error TS2304: Cannot find name 'T'.
      * @returns {U[]}
      */
     /**
      * @overload
+        ~~~~~~~~
+!!! error TS7012: This overload implicitly returns the type 'any' because it lacks a return type annotation.
+        ~~~~~~~~
+!!! error TS8017: Signature declarations can only be used in TypeScript files.
      * @template T
-        ~~~~~~~~
-!!! error TS8039: A JSDoc '@template' tag may not follow a '@typedef', '@callback', or '@overload' tag
      * @param {T[][]} array
-               ~
-!!! error TS2304: Cannot find name 'T'.
      * @returns {T[]}
      */
     /**
      * @param {unknown[]} array
+               ~~~~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
      * @param {(x: unknown) => unknown} iterable
+               ~~~~~~~~~~~~~~~~~~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
      * @returns {unknown[]}
+                 ~~~~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
      */
     function flatMap(array, iterable = identity) {
       /** @type {unknown[]} */
+                 ~~~~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
       const result = [];
       for (let i = 0; i < array.length; i += 1) {
         result.push(.../** @type {unknown[]} */(iterable(array[i])));
+                                  ~~~~~~~~~
+!!! error TS8016: Type assertion expressions can only be used in TypeScript files.
       }
       return result;
     }