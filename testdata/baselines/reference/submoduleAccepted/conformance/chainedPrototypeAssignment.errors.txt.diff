--- old.chainedPrototypeAssignment.errors.txt
+++ new.chainedPrototypeAssignment.errors.txt
@@= skipped -0, +0 lines =@@
-use.js(5,5): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
-use.js(6,5): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
+mod.js(11,17): error TS8010: Type annotations can only be used in TypeScript files.
+use.js(3,9): error TS7009: 'new' expression, whose target lacks a construct signature, implicitly has an 'any' type.
+use.js(4,9): error TS7009: 'new' expression, whose target lacks a construct signature, implicitly has an 'any' type.


 ==== use.js (2 errors) ====
     /// <reference path='./types.d.ts'/>
     var mod = require('./mod');
     var a = new mod.A()
+            ~~~~~~~~~~~
+!!! error TS7009: 'new' expression, whose target lacks a construct signature, implicitly has an 'any' type.
     var b = new mod.B()
+            ~~~~~~~~~~~
+!!! error TS7009: 'new' expression, whose target lacks a construct signature, implicitly has an 'any' type.
     a.m('nope')
-        ~~~~~~
-!!! error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
     b.m('not really')
-        ~~~~~~~~~~~~
-!!! error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
     
 ==== types.d.ts (0 errors) ====
     declare function require(name: string): any;
     declare var exports: any;
-==== mod.js (0 errors) ====
+==== mod.js (1 errors) ====
     /// <reference path='./types.d.ts'/>
     var A = function A() {
         this.a = 1
@@= skipped -28, +29 lines =@@
     exports.B = B
     A.prototype = B.prototype = {
         /** @param {number} n */
+                    ~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
         m(n) {
             return n + 1
         }