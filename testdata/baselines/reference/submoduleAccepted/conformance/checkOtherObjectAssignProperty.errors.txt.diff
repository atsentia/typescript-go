--- old.checkOtherObjectAssignProperty.errors.txt
+++ new.checkOtherObjectAssignProperty.errors.txt
@@= skipped -0, +0 lines =@@
-importer.js(3,5): error TS2339: Property 'other' does not exist on type 'typeof import("mod1")'.
-importer.js(4,5): error TS2339: Property 'prop' does not exist on type 'typeof import("mod1")'.
-importer.js(11,5): error TS2339: Property 'other' does not exist on type 'typeof import("mod1")'.
-importer.js(12,5): error TS2339: Property 'prop' does not exist on type 'typeof import("mod1")'.
-importer.js(13,5): error TS2540: Cannot assign to 'bad1' because it is a read-only property.
-importer.js(14,5): error TS2540: Cannot assign to 'bad2' because it is a read-only property.
-importer.js(15,5): error TS2540: Cannot assign to 'bad3' because it is a read-only property.
-
-
-==== importer.js (7 errors) ====
+importer.js(1,21): error TS2306: File 'mod1.js' is not a module.
+mod1.js(2,23): error TS2304: Cannot find name 'exports'.
+mod1.js(5,11): error TS8010: Type annotations can only be used in TypeScript files.
+mod1.js(7,22): error TS8016: Type assertion expressions can only be used in TypeScript files.
+mod1.js(8,23): error TS2304: Cannot find name 'exports'.
+mod1.js(11,23): error TS2304: Cannot find name 'exports'.
+mod1.js(14,23): error TS2304: Cannot find name 'exports'.
+mod1.js(15,23): error TS2304: Cannot find name 'exports'.
+mod1.js(16,23): error TS2304: Cannot find name 'exports'.
+
+
+==== importer.js (1 errors) ====
     const mod = require("./mod1");
+                        ~~~~~~~~
+!!! error TS2306: File 'mod1.js' is not a module.
     mod.thing;
     mod.other;
-        ~~~~~
-!!! error TS2339: Property 'other' does not exist on type 'typeof import("mod1")'.
     mod.prop;
-        ~~~~
-!!! error TS2339: Property 'prop' does not exist on type 'typeof import("mod1")'.
     mod.bad1;
     mod.bad2;
     mod.bad3;
@@= skipped -22, +22 lines =@@
     
     mod.thing = 0;
     mod.other = 0;
-        ~~~~~
-!!! error TS2339: Property 'other' does not exist on type 'typeof import("mod1")'.
     mod.prop = 0;
-        ~~~~
-!!! error TS2339: Property 'prop' does not exist on type 'typeof import("mod1")'.
     mod.bad1 = 0;
-        ~~~~
-!!! error TS2540: Cannot assign to 'bad1' because it is a read-only property.
     mod.bad2 = 0;
-        ~~~~
-!!! error TS2540: Cannot assign to 'bad2' because it is a read-only property.
     mod.bad3 = 0;
-        ~~~~
-!!! error TS2540: Cannot assign to 'bad3' because it is a read-only property.
     
-==== mod1.js (0 errors) ====
+==== mod1.js (8 errors) ====
     const obj = { value: 42, writable: true };
     Object.defineProperty(exports, "thing", obj);
+                          ~~~~~~~
+!!! error TS2304: Cannot find name 'exports'.
     
     /**
      * @type {string}
+              ~~~~~~
+!!! error TS8010: Type annotations can only be used in TypeScript files.
      */
     let str = /** @type {string} */("other");
+                         ~~~~~~
+!!! error TS8016: Type assertion expressions can only be used in TypeScript files.
     Object.defineProperty(exports, str, { value: 42, writable: true });
+                          ~~~~~~~
+!!! error TS2304: Cannot find name 'exports'.
     
     const propName = "prop"
     Object.defineProperty(exports, propName, { value: 42, writable: true });
+                          ~~~~~~~
+!!! error TS2304: Cannot find name 'exports'.
     
     
     Object.defineProperty(exports, "bad1", { });
+                          ~~~~~~~
+!!! error TS2304: Cannot find name 'exports'.
     Object.defineProperty(exports, "bad2", { get() { return 12 }, value: "no" });
+                          ~~~~~~~
+!!! error TS2304: Cannot find name 'exports'.
     Object.defineProperty(exports, "bad3", { writable: true });
+                          ~~~~~~~
+!!! error TS2304: Cannot find name 'exports'.
     